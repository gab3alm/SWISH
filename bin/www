#!/usr/bin/env node

// module dependencies
var app = require('../server');
var debug = require('debug')('yelp:server');
var https = require('https');

// get port from environment and store for express
var port = normalizePort(process.env.PORT || '8080');
app.set('port', port);

// create http server
var server = https.createServer(app);

// listen on port
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

// to normalize port
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) return val; // named pipe
  if (port >= 0) return port; // port number

  return false;
}

// listening for http errors
function onError(error) {
  if (error.syscall !== 'listen') throw error;

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// event listener
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
